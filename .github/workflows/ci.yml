name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:

jobs:
  php-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, curl, pdo_sqlite
          tools: composer

      - name: Install PHP deps
        run: composer install --no-interaction --prefer-dist

      - name: Run PHPUnit
        env:
          APP_ENV: test
          BYPASS_TURNSTILE: '1'
        run: composer test:api

  e2e:
    runs-on: ubuntu-latest
    needs: php-tests
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node deps
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start test server
        env:
          APP_ENV: production
          BYPASS_TURNSTILE: '1'
          CREATE_IDEA_DAILY_LIMIT: '0'
          DB_DSN: 'sqlite:./tindlekit_e2e.db'
          DB_USER: ''
          DB_PASS: ''
        run: |
          # Initialize SQLite database for E2E tests using test bootstrap
          php -r "
          putenv('DB_DSN=sqlite:./tindlekit_e2e.db');
          putenv('DB_USER=');
          putenv('DB_PASS=');
          require 'tests/bootstrap_e2e.php';
          echo 'SQLite database initialized for E2E tests\n';
          "
          php -S 127.0.0.1:8080 -t . > server.log 2>&1 &
          echo $! > server.pid
          sleep 3
      - name: Run E2E
        env:
          E2E_BASE_URL: http://127.0.0.1:8080
          BYPASS_TURNSTILE: '1'
        run: npx playwright test

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-artifacts
          path: |
            playwright-report/**
            test-results/**
          if-no-files-found: ignore
          retention-days: 7

      - name: Stop server
        if: always()
        run: |
          kill $(cat server.pid) || true
          tail -n +1 server.log || true

      - name: Upload server log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server-log
          path: server.log
          if-no-files-found: ignore
          retention-days: 7

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Quick JS syntax check
        run: |
          npm -v
          # add eslint later; placeholder keeps the job in the matrix
          echo "OK"
